/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode*root , int &maxm){
        if(root==nullptr)
        return 0;
        int left = height(root->left,maxm);
        int right = height(root->right,maxm);
        maxm = max(maxm,left+right);
        return 1+max(left,right);
    }
    
    int diameterOfBinaryTree(TreeNode* root) {
        int maxm = INT_MIN;
        height(root,maxm);
        return maxm;
    }
};
//TC = O(n^2)
//
