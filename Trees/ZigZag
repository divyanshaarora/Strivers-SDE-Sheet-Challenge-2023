/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>result;
        queue<TreeNode *>q;
        if(root==nullptr)return result;
        q.push(root);
        bool flag = true;

        while(!q.empty()){

        int size = q.size();
        vector<int>temp(size);

        for(int i = 0; i < size; i++){

            TreeNode *t=q.front();
            q.pop();
            int index = flag ? i : size-i-1;
            temp[index]=t->val;
            if(t->left!=NULL)
            q.push(t->left);
            if(t->right!=NULL)
            q.push(t->right);
        }
        flag=!flag;
        result.push_back(temp);
    }
    return result;
    }
};
